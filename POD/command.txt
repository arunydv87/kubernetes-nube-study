
kubectl get pods --all-namespaces or -A            # List all pods in all namespace
kubectl describe pod pod_name                      # Show detailed information about a resource
kubectl get pods -o wide                      # List all pods in the current namespace, with more details
kubectl get pods                              # List all pods in the namespace
kubectl get pod my-pod -o yaml                # Get a pod's YAML
kubectl run nginx --image=nginx --dry-run=client -o yaml > pod.yaml  # Generate spec for running pod nginx and write it into a file called pod.yaml
kubectl run nginx --image=nginx --port=80  # Run pod with port
Kubectl exec -it nginx -- sh or -- /bin/bash  # switch to pod terminal
kubectl exec -it busybox-sleep -c nginx -- sh   ## Multipod shell access
kubectl run tmp-shell --restart=Never --rm -i --tty --image=centos -- /bin/bash  # Temporary pod running  
kubectl get pods -l environment=production,tier=frontend  ## Check pod with label
kubectl logs my-pod                                 # dump pod logs (stdout)
kubectl logs -l name=myLabel                        # dump pod logs, with label name=myLabel (stdout)
kubectl logs my-pod --previous                      # dump pod logs (stdout) for a previous instantiation of a container
kubectl logs my-pod -c my-container                 # dump pod container logs (stdout, multi-container case)
kubectl logs -l name=myLabel -c my-container        # dump pod logs, with label name=myLabel (stdout)
kubectl logs my-pod -c my-container --previous      # dump pod container logs (stdout, multi-container case) for a previous instantiation of a container
kubectl logs -f my-pod                              # stream pod logs (stdout)
kubectl logs -f my-pod -c my-container              # stream pod container logs (stdout, multi-container case)
kubectl logs -f -l name=myLabel --all-containers    # stream all pods logs with label name=myLabel (stdout)
kubectl run -i --tty busybox --image=busybox:1.28 -- sh  # Run pod as interactive shell
kubectl run nginx --image=nginx -n mynamespace      # Start a single instance of nginx pod in the namespace of mynamespace
kubectl exec my-pod -- ls /                         # Run command in existing pod (1 container case)
kubectl exec --stdin --tty my-pod -- /bin/sh        # Interactive shell access to a running pod (1 container case)
kubectl exec my-pod -c my-container -- ls /         # Run command in existing pod (multi-container case)
kubectl top pod POD_NAME --containers               # Show metrics for a given pod and its containers
kubectl top pod POD_NAME --sort-by=cpu              # Show metrics for a given pod and sort it by 'cpu' or 'memory'

